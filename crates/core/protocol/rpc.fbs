include "expr.fbs";
include "options.fbs";

namespace SurrealDB.Protocol.Rpc;

table HealthParams {
}
table VersionParams {
}
table PingParams {
}
table InfoParams {
}
table UseParams {
    namespace: string (id: 0);
    database: string (id: 1);
}
table RootUserCredentials {
    username: string (id: 0);
    password: string (id: 1);
}
table NamespaceAccessCredentials {
    namespace: string (id: 0);
    access: string (id: 1);
    key: string (id: 2);
}
table DatabaseAccessCredentials {
    namespace: string (id: 0);
    database: string (id: 1);
    access: string (id: 2);
    key: string (id: 3);
    refresh: string (id: 4);
}
table NamespaceUserCredentials {
    namespace: string (id: 0);
    username: string (id: 1);
    password: string (id: 2);
}
table DatabaseUserCredentials {
    namespace: string (id: 0);
    database: string (id: 1);
    username: string (id: 2);
    password: string (id: 3);
}

union Access {
    Root: RootUserCredentials (id: 1),
    Namespace: NamespaceAccessCredentials (id: 2),
    Database: DatabaseAccessCredentials (id: 3),
    NamespaceUser: NamespaceUserCredentials (id: 4),
    DatabaseUser: DatabaseUserCredentials (id: 5),
}

table SignupParams {
    namespace: string (id: 0);
    database: string (id: 1);
    access: string (id: 2);
    access_params: SurrealDB.Protocol.Expr.Variables (id: 3);
}
table SigninParams {
    access: Access (id: 1);
}
table AuthenticateParams {
    token: string (id: 0);
}
table InvalidateParams {
}
table CreateParams {
    // TODO: Match the surrealdb_core::expr::CreateStatement parameters.
}
table ResetParams {
    // TODO: Match the surrealdb_core::expr::ResetStatement parameters.
}
table KillParams {
    live_uuid: string (id: 0);
}
table LiveParams {
    // TODO: Match the surrealdb_core::expr::LiveStatement parameters.
}
table SetParams {
    key: string (id: 0);
    value: SurrealDB.Protocol.Expr.Value (id: 1);
}
table UnsetParams {
    key: string (id: 0);
}
table SelectParams {
    // TODO: Match the surrealdb_core::expr::SelectStatement parameters.
}
table InsertParams {
    // TODO: Match the surrealdb_core::expr::InsertStatement parameters.
}
table UpsertParams {
    // TODO: Match the surrealdb_core::expr::UpsertStatement parameters.
}
table UpdateParams {
    // TODO: Match the surrealdb_core::expr::UpdateStatement parameters.
}
table DeleteParams {
    // TODO: Match the surrealdb_core::expr::DeleteStatement parameters.
}
table QueryParams {
    query: string (id: 0);
    variables: SurrealDB.Protocol.Expr.Variables (id: 1);
}

table RelateParams {
    // TODO: Match the surrealdb_core::expr::RelateStatement parameters.
}
table RunParams {
    // TODO: This is for running a surrealdb function. Match the cmd.rs parameters here.
}
table GraphQlParams {
    // TODO: Fill in the parameters for GraphQL queries.
}

union Command {
    Health: HealthParams (id: 1),
    Version: VersionParams (id: 2),
    Ping: PingParams (id: 3),
    Info: InfoParams (id: 4),
    Use: UseParams (id: 5),
    Signup: SignupParams (id: 6),
    Signin: SigninParams (id: 7),
    Authenticate: AuthenticateParams (id: 8),
    Invalidate: InvalidateParams (id: 9),
    Reset: ResetParams (id: 10),
    Kill: KillParams (id: 11),
    Live: LiveParams (id: 12),
    Set: SetParams (id: 13),
    Unset: UnsetParams (id: 14),
    Select: SelectParams (id: 15),
    Create: CreateParams (id: 16),
    Insert: InsertParams (id: 17),
    Upsert: UpsertParams (id: 18),
    Update: UpdateParams (id: 19),
    Delete: DeleteParams (id: 20),
    Query: QueryParams (id: 21),
    Relate: RelateParams (id: 22),
    Run: RunParams (id: 23),
    GraphQl: GraphQlParams (id: 24),
}

table Request {
    id: string (id: 0);
    rpc_version: uint32 (id: 1);

    command: Command (id: 3);
}


table QueryResponse {
    index: uint64 (id: 0);
    stats: QueryStats (id: 1);

    result: SurrealDB.Protocol.Expr.Value (id: 2);
}

table Response {
    id: string (id: 0);
    results: [QueryResponse] (id: 1);
}

table QueryStats {
    start_time: SurrealDB.Protocol.Common.Timestamp (id: 0);
    execution_duration: SurrealDB.Protocol.Common.Duration (id: 1);
}
table Error {
    code: int64 (id: 0);
    message: string (id: 1);
}
